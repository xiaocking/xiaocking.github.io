(window.webpackJsonp=window.webpackJsonp||[]).push([[178],{688:function(n,t,s){"use strict";s.r(t);var e=s(2),a=Object(e.a)({},(function(){var n=this._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[n("h1",{attrs:{id:"mongoose-相关"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mongoose-相关"}},[this._v("#")]),this._v(" mongoose 相关")]),this._v(" "),n("h2",{attrs:{id:"常用操作符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#常用操作符"}},[this._v("#")]),this._v(" 常用操作符")]),this._v(" "),n("div",{staticClass:"language-yml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yml"}},[n("code",[this._v("  $or 或关系\n\n  $nor 或关系取反\n\n  $gt 大于\n\n  $gte 大于等于\n\n  $lt 小于\n\n  $lte 小于等于\n\n  $ne 不等于\n\n  $in 在多个值范围内\n\n  $nin 不在多个值范围内\n\n  $all 匹配数组中多个值\n\n  $regex 正则，用于模糊查询\n\n  $size 匹配数组大小\n\n  $maxDistance 范围查询，距离（基于LBS）\n\n  $mod  取模运算\n\n  $near 邻域查询，查询附近的位置（基于LBS）\n\n  $exists 字段是否存在\n\n  $elemMatch 匹配内数组内的元素\n\n  $within 范围查询（基于LBS）\n\n  $box 范围查询，矩形范围（基于LBS）\n\n  $center 范围醒询，圆形范围（基于LBS）\n\n  $centerSphere 范围查询，球形范围（基于LBS）\n\n  $slice 查询字段集合中的元素（比如从第几个之后，第N到第M个元素\n\n")])])])])}),[],!1,null,null,null);t.default=a.exports}}]);