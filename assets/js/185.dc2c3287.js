(window.webpackJsonp=window.webpackJsonp||[]).push([[185],{696:function(t,n,e){"use strict";e.r(n);var a=e(2),v=Object(a.a)({},(function(){var t=this,n=t._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"pnpm-相关"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#pnpm-相关"}},[t._v("#")]),t._v(" pnpm 相关")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://pnpm.io/zh/",target:"_blank",rel:"noopener noreferrer"}},[t._v("官网"),n("OutboundLink")],1)]),t._v(" "),n("h2",{attrs:{id:"介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),n("blockquote",[n("p",[t._v("pnpm 代表 "),n("code",[t._v("performant npm（高性能的npm）")]),t._v("，同 "),n("code",[t._v("npm")]),t._v("和"),n("code",[t._v("Yarn")]),t._v(" ，都属于 "),n("code",[t._v("Javascript")]),t._v(" 包管理安装工具"),n("br"),t._v("\n它较 "),n("code",[t._v("npm")]),t._v(" 和 "),n("code",[t._v("Yarn")]),t._v(" 在性能上得到很大提升，被称为"),n("code",[t._v("快速的，节省磁盘空间")]),t._v("的包管理工具")])]),t._v(" "),n("p",[t._v("当使用 npm 或 Yarn 时，如果你有 100 个项目使用了某个依赖（dependency），就会有 100 份该依赖的副本保存在硬盘上，而在使用 pnpm 时，依赖会被存储在内容可寻址的存储中，所以：")]),t._v(" "),n("ol",[n("li",[t._v("如果你用到了某依赖项的不同版本，只会将不同版本间有差异的文件添加到仓库。 例如，如果某个包有100个文件，而它的新版本只改变了其中1个文件。那么 pnpm update 时只会向存储中心额外添加1个新文件，而不会因为仅仅一个文件的改变复制整新版本包的内容。")]),t._v(" "),n("li",[t._v("所有文件都会存储在硬盘上的某一位置。 当软件包被安装时，包里的文件会硬链接到这一位置上对应的文件，而不会占用额外的磁盘空间。 这允许你跨项目地共享同一版本的依赖。")])]),t._v(" "),n("p",[t._v("因此，您在磁盘上节省了大量空间，这与项目和依赖项的数量成正比，并且安装速度要快得多！")]),t._v(" "),n("h2",{attrs:{id:"安装使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安装使用"}},[t._v("#")]),t._v(" 安装使用")]),t._v(" "),n("p",[t._v("可以在官网查看"),n("a",{attrs:{href:"https://pnpm.io/zh/installation",target:"_blank",rel:"noopener noreferrer"}},[t._v("其他安装方式"),n("OutboundLink")],1)]),t._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 通过npm安装")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-g")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("pnpm")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 通过下述命令查看已安装的pnpm的版本")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("pnpm")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-v")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 初始化，生成package.json文件")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("pnpm")]),t._v(" init\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装依赖")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("pnpm")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" xxx\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 运行package.json中定义的scripts脚本，启动服务即可")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("pnpm")]),t._v(" run xxx\n")])])]),n("h2",{attrs:{id:"创建项目"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#创建项目"}},[t._v("#")]),t._v(" 创建项目")]),t._v(" "),n("p",[t._v("示例：创建一个vue3项目")]),t._v(" "),n("p",[t._v("通过pnpm create使用vite套件新建一个vue3的项目，"),n("a",{attrs:{href:"https://cn.vuejs.org/guide/quick-start.html#try-vue-online",target:"_blank",rel:"noopener noreferrer"}},[t._v("直达vue官方链接"),n("OutboundLink")],1)]),t._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用pnpm create 启动套件（vite，只有存在的套件才可以）创建模板项目")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("pnpm")]),t._v(" create vite projectName -- "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--template")]),t._v(" vue\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" projectName\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("pnpm")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("pnpm")]),t._v(" dev\n")])])]),n("p",[t._v("通过上述操作，我们学到了pnpm项目的初始化、安装依赖、启动服务等，可以运行起来，感受一下它和npm运行速度的差异。")]),t._v(" "),n("h2",{attrs:{id:"常用命令"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#常用命令"}},[t._v("#")]),t._v(" 常用命令")]),t._v(" "),n("h3",{attrs:{id:"设置源"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#设置源"}},[t._v("#")]),t._v(" 设置源")]),t._v(" "),n("p",[t._v("查看源："),n("br"),t._v(" "),n("code",[t._v("pnpm config get registry")])]),t._v(" "),n("p",[t._v("切换源："),n("br"),t._v(" "),n("code",[t._v("pnpm config set registry <淘宝源或其他源地址>")])]),t._v(" "),n("h3",{attrs:{id:"初始化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#初始化"}},[t._v("#")]),t._v(" 初始化")]),t._v(" "),n("p",[t._v("初始化package.json：\n"),n("code",[t._v("pnpm init")]),t._v(" "),n("code",[t._v("pnpm init -y")])]),t._v(" "),n("blockquote",[n("p",[t._v("注意：pnpm init只能一键快速生成package.json文件，如果要一步一步填写每个属性的值生成package.json文件，则需要通过npm init生成，"),n("br"),t._v("\n如果要一键快速生成，需要增加-y参数npm init -y来生成。")])]),t._v(" "),n("h3",{attrs:{id:"管理依赖"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#管理依赖"}},[t._v("#")]),t._v(" 管理依赖")]),t._v(" "),n("p",[t._v("安装依赖包到 dependencies："),n("br"),t._v(" "),n("code",[t._v("pnpm add <pkg>")])]),t._v(" "),n("p",[t._v("安装依赖包到devDependencies："),n("br"),t._v(" "),n("code",[t._v("pnpm add -D <pkg>")])]),t._v(" "),n("p",[t._v("安装依赖包到optionalDependencies："),n("br"),t._v(" "),n("code",[t._v("pnpm add -O <pkg>")])]),t._v(" "),n("p",[t._v("全局安装依赖包："),n("br"),t._v(" "),n("code",[t._v("pnpm add -g xxx")])]),t._v(" "),n("p",[t._v("安装项目全部依赖："),n("br"),t._v(" "),n("code",[t._v("pnpm install")]),n("br"),t._v(" "),n("code",[t._v("pnpm i")])]),t._v(" "),n("p",[t._v("更新依赖包："),n("br"),t._v(" "),n("code",[t._v("pnpm update")]),n("br"),t._v(" "),n("code",[t._v("pnpm up")])]),t._v(" "),n("p",[t._v("删除依赖包："),n("br"),t._v(" "),n("code",[t._v("pnpm remove")]),n("br"),t._v(" "),n("code",[t._v("pnpm rm/uninstall/un")])]),t._v(" "),n("h3",{attrs:{id:"查看依赖"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#查看依赖"}},[t._v("#")]),t._v(" 查看依赖")]),t._v(" "),n("p",[t._v("查看本地安装的依赖："),n("br"),t._v(" "),n("code",[t._v("pnpm list")]),n("br"),t._v(" "),n("code",[t._v("pnpm ls")])]),t._v(" "),n("p",[t._v("查看全局安装的依赖："),n("br"),t._v(" "),n("code",[t._v("pnpm list --global")]),n("br"),t._v(" "),n("code",[t._v("pnpm ls --g")])]),t._v(" "),n("p",[t._v("检查过期的依赖："),n("br"),t._v(" "),n("code",[t._v("pnpm outdated")])]),t._v(" "),n("h3",{attrs:{id:"运行脚本"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#运行脚本"}},[t._v("#")]),t._v(" 运行脚本")]),t._v(" "),n("p",[t._v("运行自定义脚本："),n("br"),t._v(" "),n("code",[t._v("pnpm run xxx")]),t._v(" "),n("code",[t._v("pnpm xxx")])]),t._v(" "),n("p",[t._v("运行test测试脚本："),n("br"),t._v(" "),n("code",[t._v("pnpm test")])]),t._v(" "),n("p",[t._v("启动套件创建项目："),n("br"),t._v(" "),n("code",[t._v("pnpm create")])]),t._v(" "),n("p",[t._v("运行start启动命令："),n("br"),t._v(" "),n("code",[t._v("pnpm start")])]),t._v(" "),n("h3",{attrs:{id:"发布依赖包"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#发布依赖包"}},[t._v("#")]),t._v(" 发布依赖包")]),t._v(" "),n("p",[n("code",[t._v("pnpm publish")])]),t._v(" "),n("h3",{attrs:{id:"管理node环境"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#管理node环境"}},[t._v("#")]),t._v(" 管理node环境")]),t._v(" "),n("p",[t._v("可实现nvm、n等node版本管理工具，安装并切换node.js版本的功能。")]),t._v(" "),n("p",[t._v("本地安装并使用："),n("br"),t._v(" "),n("code",[t._v("pnpm env use <node版本号>")])]),t._v(" "),n("p",[t._v("全局安装并使用："),n("br"),t._v(" "),n("code",[t._v("pnpm env use --global <node版本号>")])])])}),[],!1,null,null,null);n.default=v.exports}}]);