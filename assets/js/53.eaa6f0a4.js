(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{522:function(t,n,s){t.exports=s.p+"assets/img/gitlab_runner_setting.248ffb74.png"},700:function(t,n,s){"use strict";s.r(n);var a=s(2),e=Object(a.a)({},(function(){var t=this,n=t._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"gitlab-配置-ci-cd"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#gitlab-配置-ci-cd"}},[t._v("#")]),t._v(" Gitlab 配置 CI/CD")]),t._v(" "),n("h2",{attrs:{id:"本次安装环境"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#本次安装环境"}},[t._v("#")]),t._v(" 本次安装环境")]),t._v(" "),n("div",{staticClass:"language-yml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yml"}},[n("code",[t._v("系统：CentOS Linux release 7.5.1804 (Core)\n")])])]),n("h2",{attrs:{id:"新建-gitlab-ci-yml文件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#新建-gitlab-ci-yml文件"}},[t._v("#")]),t._v(" 新建"),n("code",[t._v(".gitlab-ci.yml")]),t._v("文件")]),t._v(" "),n("div",{staticClass:"language-yml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This file is a template, and might need editing before it works on your project.")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Official framework image. Look for the different tagged releases at:")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# https://hub.docker.com/r/library/node/tags/")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# image: node:12.16.2")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Pick zero or more services to be used on all builds.")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Only needed when using a docker container to run your tests in.")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Check out: http://docs.gitlab.com/ce/ci/docker/using_docker_images.html#what-is-a-service")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# services:")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   - mysql:latest")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   - redis:latest")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   - postgres:latest")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This folder is cached between builds")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# http://docs.gitlab.com/ce/ci/yaml/README.html#cache")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cache:")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   paths:")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   - node_modules/")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("test_dev")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" npm install\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" pm2 restart test\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  tags:  # 如果runner配置了tags并且锁定 此项需配置")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   - xiaoc")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  only:")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   - master # 指定触发分支")]),t._v("\n")])])]),n("blockquote",[n("p",[t._v("将文件上传到gitlab仓库根目录下即可")])]),t._v(" "),n("h2",{attrs:{id:"添加runner"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#添加runner"}},[t._v("#")]),t._v(" 添加runner")]),t._v(" "),n("p",[t._v("1、添加GitLab的官方仓库：")]),t._v(" "),n("div",{staticClass:"language-yml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yml"}},[n("code",[t._v("curl "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("L https"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//packages.gitlab.com/install/repositories/runner/gitlab"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("runner/script.rpm.sh "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v(" sudo bash\n")])])]),n("p",[t._v("2、安装最新版本的GitLab Runner")]),t._v(" "),n("div",{staticClass:"language-yml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yml"}},[n("code",[t._v("sudo yum install gitlab"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("runner\n")])])]),n("p",[t._v("3、注册gitlab-runner")]),t._v(" "),n("div",{staticClass:"language-yml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 向GitLab-CI注册一个Runner需要两样东西：GitLab-CI的url和注册token。")]),t._v("\ngitlab"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("ci"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("multi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("runner register\n\n需要按照步骤输入：\n\n1、输入gitlab的服务URL，获取方式参考下图\n2、输入gitlab"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("ci的Toekn，获取方式参考下图\n3、关于集成服务中对于这个runner的描述\n  给这个gitlab"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("runner输入一个标记，这个tag非常重要，在后续的使用过程中需要使用这个tag来指定gitlab"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("runner\n4、是否运行在没有tag的build上面。在配置gitlab"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("ci的时候，会有很多job，每个job可以通过tags属性来选择runner。这里为true表示如果job没有配置tags，也执行\n5、是否锁定runner到当前项目\n5、选择执行器，gitlab"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("runner实现了很多执行器，可用在不同场景中运行构建，详情可见GitLab Runner Executors，这里选用Shell模式\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 其中，token是为了确定你这个Runner是所有工程都能够使用的Shared Runner还是具体某一个工程才能使用的Specific Runner。")]),t._v("\n")])])]),n("blockquote",[n("p",[t._v("url和token获取如下：")])]),t._v(" "),n("p",[n("img",{attrs:{src:s(522),alt:"runner"}})]),t._v(" "),n("p",[t._v("4、 给runner用户授权")]),t._v(" "),n("div",{staticClass:"language-yml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 当gitlab-runner安装完成后linux中会添加一个gitlab-runner用户")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 为了防止gitlab-runner运行时无权限的问题，可以直接先授权")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 第一种方法")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将gitlab-runner用户添加到root组中")]),t._v("\ngpasswd "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("a gitlab"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("runner root\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置需要操作目录的权限，比如你的 runner 要在 /home/gitlab-runner 目录下操作")]),t._v("\nchmod 775 /home/gitlab"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("runner\n\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 第二种方法")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 卸载runner配置")]),t._v("\nsudo gitlab"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("runner uninstall\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 以root用户重装runner配置，--user 要配置的用户")]),t._v("\ngitlab"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("runner install "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("working"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("directory /home/gitlab"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("runner "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("user root\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重启")]),t._v("\nsudo service gitlab"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("runner restart\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看当前runner用户")]),t._v("\nps aux"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v("grep gitlab"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("runner\n")])])]),n("blockquote",[n("p",[t._v("gitlab-runner 配置完成")])]),t._v(" "),n("h2",{attrs:{id:"测试提交没问题就完成了"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#测试提交没问题就完成了"}},[t._v("#")]),t._v(" 测试提交没问题就完成了")]),t._v(" "),n("h2",{attrs:{id:"其他命令"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#其他命令"}},[t._v("#")]),t._v(" 其他命令")]),t._v(" "),n("div",{staticClass:"language-yml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看runner注册信息")]),t._v("\ngitlab"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("ci"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("multi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("runner list\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除注册信息")]),t._v("\ngitlab"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("ci"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("multi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("runner unregister "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v('name "名称"\n\n'),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 由于我们的 shell 脚本中有执行 git pull 的命令，我们直接设置以 ssh 方式拉取代码：")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 切换到gitlab-runner用户")]),t._v("\nsu gitlab"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("runner\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 生成git密钥")]),t._v("\nssh"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("keygen "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("t rsa "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v('C "你在 GitLab 上的邮箱地址"\ncd ~\ncd .ssh\ncat id_rsa.pub\n\n'),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 复制密钥到gitlab的 个人资料设置 -> SSH密钥")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将密钥添加到gitlab中，即可在shell中使用ssh链接拉取gitlab代码")]),t._v("\n")])])]),n("h2",{attrs:{id:"常见问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#常见问题"}},[t._v("#")]),t._v(" 常见问题")]),t._v(" "),n("div",{staticClass:"language-yml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 执行脚本出现 Permission denied 错误")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 以登录管理员账号 执行")]),t._v("\nsudo chmod "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("R 777  /工作目录\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# sudo：是linux系统管理指令，是允许系统管理员让普通用户执行一些或者全部的root命令的一个工具。")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -R：是指几连医用到目录里所有子目录和文件；")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 777：是指所有用户都拥有的最高权限。")]),t._v("\n")])])])])}),[],!1,null,null,null);n.default=e.exports}}]);