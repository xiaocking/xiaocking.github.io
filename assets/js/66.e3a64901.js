(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{566:function(t,a,s){"use strict";s.r(a);var e=s(2),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"布局"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#布局"}},[t._v("#")]),t._v(" 布局")]),t._v(" "),a("p",[a("em",[t._v("当你构建一个组件或者页面时，有多种布局方式可供选择，本节内容是各种布局的一个概览。")])]),t._v(" "),a("p",[t._v("假设你是一个开发者，此时一个设计专业的同事递给你一份新的网站设计稿让你开发。这份设计稿有很多有趣的布局和组件，有二维布局，也有非常灵活可流动的布局。你怎么去选择最好的css布局方式呢？")]),t._v(" "),a("p",[t._v("CSS为我们提供了多种布局方式，有水平轴布局，垂直轴布局或者水平和竖直混合布局。选择一个正确的布局方式往往很困难，通常你需要多个布局方式去解决问题。为了解决这些，在接下来的几个模块，你将会学习css的布局机制。")]),t._v(" "),a("h2",{attrs:{id:"二-display属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二-display属性"}},[t._v("#")]),t._v(" 二.display属性")]),t._v(" "),a("p",[a("code",[t._v("display")]),t._v("属性做了两件事。第一件事是他决定一个盒子是否表现为"),a("strong",[t._v("inline")]),t._v("或者"),a("strong",[t._v("block")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".my-element")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" inline\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("inline元素被称为行内元素，行内元素就像一段语句中的一个单词。它们在行内方向上紧挨着彼此。像"),a("code",[t._v("<span>")]),t._v("和"),a("code",[t._v("<strong>")]),t._v("元素就是典型的行内元素，它们在"),a("code",[t._v("<p>")]),t._v("（段落，"),a("code",[t._v("<p>")]),t._v("是一个block元素，后面将会介绍block元素）中都是紧挨着彼此的。它们同样拥有周围的空间，即"),a("code",[t._v("padding")]),t._v("、"),a("code",[t._v("border")]),t._v("和"),a("code",[t._v("margin")]),t._v("属性都是有效的。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/pengfeiw/PengfeiBlog@1.0.0/image/120.jpg",alt:"css布局"}})]),t._v(" "),a("p",[t._v("你无法设置行内元素的"),a("code",[t._v("width")]),t._v("和"),a("code",[t._v("height")]),t._v("属性。block层级的margin和padding将会被周围的元素忽略（这句话的英文原文是"),a("em",[t._v("Any block level margin and padding will be ignored by the surrounding elements")]),t._v("，我不清楚这样翻译是否合适）。")]),t._v(" "),a("p",[t._v("block元素，即块元素，它们并不是紧挨着其他元素的。它们在页面中会自动生成新的一行。块元素在行内方向上会扩展尺寸，因此它们会占据水平方向100%宽度。块元素任意方向的边距将不会被忽略。")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".my-element")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" block"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("code",[t._v("display")]),t._v("属性还可以决定元素的子元素的行为。例如设置"),a("code",[t._v("display: flex")]),t._v("，使元素盒子成为一个block层级的盒子（块元素），并且将子元素变成flex项目（item）。这会启用flex属性，flex属性可以用来控制子元素的布局方式（对其、排序、流动）。")]),t._v(" "),a("h2",{attrs:{id:"二-flex和grid"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二-flex和grid"}},[t._v("#")]),t._v(" 二.flex和Grid")]),t._v(" "),a("p",[t._v("flex（弹性布局）和grid（格子布局）是为多个元素创建布局规则的两种主要布局机制。它们有很多共同点，但是却是被设计出来去解决不同的布局问题的。")]),t._v(" "),a("blockquote",[a("p",[t._v("在后面的章节内容，我将会更详细的介绍弹性布局和格子布局的内容。但是目前我们仅大致看下这两种布局方式，了解它们的功能。")])]),t._v(" "),a("p",[t._v("首先明确两个概念：")]),t._v(" "),a("ul",[a("li",[t._v("flex/grid盒子（简称盒子）："),a("code",[t._v("display")]),t._v("属性设置为"),a("code",[t._v("flex")]),t._v("或者"),a("code",[t._v("grid")]),t._v("的元素被称为盒子。")]),t._v(" "),a("li",[t._v("flex/grid项目（简称项目）：flex/grid盒子元素的直接子元素，不包含孙子元素。")])]),t._v(" "),a("h3",{attrs:{id:"弹性布局"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#弹性布局"}},[t._v("#")]),t._v(" 弹性布局")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".my-element")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("弹性布局主要用于一维布局。布局方向是单轴的，可以是水平方向或者竖直方向。默认情况下，弹性布局会在内联方向上（水平方向）排列元素，flex项目会紧挨着彼此，并且会在块方向上（竖直方向）被拉伸，所以项目与盒子高度相同。")]),t._v(" "),a("iframe",{staticStyle:{width:"100%"},attrs:{height:"300",scrolling:"no",title:"008 Layout_1",src:"https://codepen.io/AhCola/embed/jOmeoOX?default-tab=html%2Cresult",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"}},[t._v("\n  See the Pen "),a("a",{attrs:{href:"https://codepen.io/AhCola/pen/jOmeoOX"}},[t._v("\n  008 Layout_1")]),t._v(" by Pengfei Wang ("),a("a",{attrs:{href:"https://codepen.io/AhCola"}},[t._v("@AhCola")]),t._v(")\n  on "),a("a",{attrs:{href:"https://codepen.io"}},[t._v("CodePen")]),t._v(".\n")]),t._v(" "),a("p",[t._v("flex项目会保持同轴排列，在超过flex盒子范围时，并不会换行，而是被自动压缩宽度排列。可以通过"),a("code",[t._v("align-items")]),t._v("、 "),a("code",[t._v("justify-content")]),t._v("和"),a("code",[t._v("flex-wrap")]),t._v("改变这一默认行为。")]),t._v(" "),a("p",[t._v("你也可以通过"),a("code",[t._v("flex")]),t._v("属性设置flex项目如何压缩、拉伸尺寸。")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".my-element")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1 0 auto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("code",[t._v("flex")]),t._v("属性是"),a("code",[t._v("flex-grow")]),t._v("、"),a("code",[t._v("flex-shrink")]),t._v("、"),a("code",[t._v("flex-basis")]),t._v("三个属性的混合写法。你可以将上面的例子改写为：")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".my-element")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-grow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-shrink")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-basis")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" auto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("开发人员提供这些低级规则，以提示浏览器当视口尺寸发生变化时如何布局元素。这使得弹性布局非常适合设计响应式网页。")]),t._v(" "),a("h3",{attrs:{id:"格子布局"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#格子布局"}},[t._v("#")]),t._v(" 格子布局")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".my-element")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" grid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("格子布局（Grid）与弹性布局（flex）非常相似，但是格子布局是为多轴布局而设计的。")]),t._v(" "),a("p",[t._v("格子布局引入了一些新的布局基础规则，例如"),a("code",[t._v("repeat()")]),t._v("和"),a("code",[t._v("minmax()")]),t._v("函数。还有一个"),a("code",[t._v("fr")]),t._v("单位，用来描述分配剩余空间的弹性系数。你可以创建一个12列，每列之间有一个空白间距的布局。")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".my-element")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" grid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("grid-template-columns")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("repeat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("12"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 1fr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("gap")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1rem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("iframe",{staticStyle:{width:"100%"},attrs:{height:"300",scrolling:"no",title:"008 Layout_2",src:"https://codepen.io/AhCola/embed/zYwmQor?default-tab=html%2Cresult",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"}},[t._v("\n  See the Pen "),a("a",{attrs:{href:"https://codepen.io/AhCola/pen/zYwmQor"}},[t._v("\n  008 Layout_2")]),t._v(" by Pengfei Wang ("),a("a",{attrs:{href:"https://codepen.io/AhCola"}},[t._v("@AhCola")]),t._v(")\n  on "),a("a",{attrs:{href:"https://codepen.io"}},[t._v("CodePen")]),t._v(".\n")]),t._v(" "),a("p",[t._v("你还可以通过格子布局设置二维布局。我们可以设置第一个grid项目占据两行三列的空间。")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".my-element :first-child")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("grid-row")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1/3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("grid-column")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1/4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("通过"),a("code",[t._v("grid-row")]),t._v("和"),a("code",[t._v("grid-column")]),t._v("属性设置盒子中第一个元素水平占据空间从第一列到第四列，竖直占据空间从第一行到第三行。")]),t._v(" "),a("iframe",{staticStyle:{width:"100%"},attrs:{height:"300",scrolling:"no",title:"008 Layout_3",src:"https://codepen.io/AhCola/embed/MWmPdmW?default-tab=html%2Cresult",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"}},[t._v("\n  See the Pen "),a("a",{attrs:{href:"https://codepen.io/AhCola/pen/MWmPdmW"}},[t._v("\n  008 Layout_3")]),t._v(" by Pengfei Wang ("),a("a",{attrs:{href:"https://codepen.io/AhCola"}},[t._v("@AhCola")]),t._v(")\n  on "),a("a",{attrs:{href:"https://codepen.io"}},[t._v("CodePen")]),t._v(".\n")]),t._v(" "),a("h3",{attrs:{id:"flow布局"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flow布局"}},[t._v("#")]),t._v(" flow布局")]),t._v(" "),a("p",[t._v("如果不使用弹性布局和格子布局，你的元素将会显示为正常文档流。还有一些布局方式可以在正常文档流中改变元素的行为和位置。")]),t._v(" "),a("h4",{attrs:{id:"inline-block"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#inline-block"}},[t._v("#")]),t._v(" inline-block")]),t._v(" "),a("p",[t._v("前面提到过，内联元素的块方向上的边距（margin和padding）将会被周围的元素忽略。通过设置"),a("code",[t._v("inline-block")]),t._v("，可以使内联元素的块方向上的边距不会被忽略。")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p span")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" inline-block"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("使用"),a("code",[t._v("inline-block")]),t._v("可以让一个盒子拥有块元素的一些特性，但是仍然在处于内联文档流中，与其他元素紧挨着。")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p span")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("margin-top")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0.5rem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h4",{attrs:{id:"floats"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#floats"}},[t._v("#")]),t._v(" Floats")]),t._v(" "),a("p",[t._v("如果一个段落中有一张图片，但是你想让文字环绕在图片周围，就像杂志一样。你可以使用floats特征去完成这种效果：")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("img")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("float")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" left"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("margin-right")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1em"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("code",[t._v("float")]),t._v("属性指示元素朝着指定方向流动。例子中的图片被指示朝着左侧流动，并且允许它的姐妹元素环绕着它。你可以设置"),a("code",[t._v("float")]),t._v("属性为"),a("code",[t._v("left")]),t._v("、"),a("code",[t._v("right")]),t._v("、"),a("code",[t._v("inherit")]),t._v("等值。")]),t._v(" "),a("iframe",{staticStyle:{width:"100%"},attrs:{height:"300",scrolling:"no",title:"008 Layout_4",src:"https://codepen.io/AhCola/embed/PomyvEd?default-tab=html%2Cresult",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"}},[t._v("\n  See the Pen "),a("a",{attrs:{href:"https://codepen.io/AhCola/pen/PomyvEd"}},[t._v("\n  008 Layout_4")]),t._v(" by Pengfei Wang ("),a("a",{attrs:{href:"https://codepen.io/AhCola"}},[t._v("@AhCola")]),t._v(")\n  on "),a("a",{attrs:{href:"https://codepen.io"}},[t._v("CodePen")]),t._v(".\n")]),t._v(" "),a("p",[t._v("注意：当你使用"),a("code",[t._v("float")]),t._v("属性，你要记住所有在float元素后的元素的布局都会被调整。为了防止这种情况，你可以清除float效果，可以通过设置float元素后面的元素"),a("code",[t._v("clear: both")]),t._v("属性值，也可以通过为float元素的父元素添加"),a("code",[t._v("display: flow-root")]),t._v("属性值。")]),t._v(" "),a("h4",{attrs:{id:"多列布局"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多列布局"}},[t._v("#")]),t._v(" 多列布局")]),t._v(" "),a("p",[t._v("如果有一个很长的列表，你可以通过"),a("code",[t._v("column-count")]),t._v("设置列表的列数，通过"),a("code",[t._v("column-gap")]),t._v("设置列表的列间距。")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".countries")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("column-count")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("column-gap")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1em"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("iframe",{staticStyle:{width:"100%"},attrs:{height:"300",scrolling:"no",title:"008 Layout_5",src:"https://codepen.io/AhCola/embed/KKmGLBK?default-tab=html%2Cresult",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"}},[t._v("\n  See the Pen "),a("a",{attrs:{href:"https://codepen.io/AhCola/pen/KKmGLBK"}},[t._v("\n  008 Layout_5")]),t._v(" by Pengfei Wang ("),a("a",{attrs:{href:"https://codepen.io/AhCola"}},[t._v("@AhCola")]),t._v(")\n  on "),a("a",{attrs:{href:"https://codepen.io"}},[t._v("CodePen")]),t._v(".\n")]),t._v(" "),a("p",[t._v("上面的例子，会自动将列表分成两列，并且在列之间添加一个空白间距。")]),t._v(" "),a("p",[t._v("也可以通过设置"),a("code",[t._v("column-width")]),t._v("，然后通过列表宽度，自动划分列数。")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".countries")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("column-width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 260px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("column-gap")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1em"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("iframe",{staticStyle:{width:"100%"},attrs:{height:"300",scrolling:"no",title:"008 Layout_6",src:"https://codepen.io/AhCola/embed/QWvZRBe?default-tab=html%2Cresult",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"}},[t._v("\n  See the Pen "),a("a",{attrs:{href:"https://codepen.io/AhCola/pen/QWvZRBe"}},[t._v("\n  008 Layout_6")]),t._v(" by Pengfei Wang ("),a("a",{attrs:{href:"https://codepen.io/AhCola"}},[t._v("@AhCola")]),t._v(")\n  on "),a("a",{attrs:{href:"https://codepen.io"}},[t._v("CodePen")]),t._v(".\n")]),t._v(" "),a("h4",{attrs:{id:"position"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#position"}},[t._v("#")]),t._v(" position")]),t._v(" "),a("p",[a("code",[t._v("position")]),t._v("属性会改变元素在正常文档流中的表现和它与其他元素之间的关系。可用的属性值由"),a("code",[t._v("static")]),t._v("、"),a("code",[t._v("relative")]),t._v("、"),a("code",[t._v("absolute")]),t._v("、"),a("code",[t._v("fixed")]),t._v("和"),a("code",[t._v("sticky")]),t._v("。默认值为"),a("code",[t._v("static")]),t._v("。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("static：该关键字指定元素使用正常的布局行为，即元素在文档常规流中当前的布局位置。此时 top, right, bottom, left 和 z-index 属性无效。")])]),t._v(" "),a("li",[a("p",[t._v("relative： 该关键字下，元素先放置在未添加定位时的位置，再在不改变页面布局的前提下调整元素位置（因此会在此元素未添加定位时所在位置留下空白）。position:relative对table-row, table-column, table-cell, table-caption 元素无效。")])]),t._v(" "),a("li",[a("p",[t._v("absolute：元素会被移出正常文档流，并不为元素预留空间，通过指定元素相对于最近的非 static定位祖先元素的偏移，来确定元素位置。绝对定位的元素可以设置外边距（margins），且不会与其他边距合并。")])]),t._v(" "),a("li",[a("p",[t._v("fixed：元素会被移出正常文档流，并不为元素预留空间，而是通过指定元素相对于屏幕视口（viewport）的位置来指定元素位置。元素的位置在屏幕滚动时不会改变。打印时，元素会出现在的每页的固定位置。fixed属性会创建新的层叠上下文。当元素祖先的transform，perspective或filter属性非 none 时，容器由视口改为该祖先。")])]),t._v(" "),a("li",[a("p",[t._v("sticky：元素根据正常文档流进行定位，然后相对它的最近滚动祖先（nearest scrolling ancestor）和containing block(最近块级祖先nearest block-level ancestor)，包括table-related元素，基于top、right、bottom和left的值进行偏移。偏移值不会影响任何其他元素的位置。")])])]),t._v(" "),a("p",[t._v("可以在"),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/position",target:"_blank",rel:"noopener noreferrer"}},[t._v("这里"),a("OutboundLink")],1),t._v("获得更详细的内容。")]),t._v(" "),a("p",[t._v("（完）")])])}),[],!1,null,null,null);a.default=n.exports}}]);