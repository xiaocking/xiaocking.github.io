(window.webpackJsonp=window.webpackJsonp||[]).push([[198],{716:function(n,e,t){"use strict";t.r(e);var s=t(2),a=Object(s.a)({},(function(){var n=this._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[n("h1",{attrs:{id:"webpack-常用插件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#webpack-常用插件"}},[this._v("#")]),this._v(" webpack 常用插件")]),this._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v('"webpack": "^4.43.0",\n"webpack-cli": "^3.3.11",\n\n"webpack-dev-server": "^3.10.3",\n// 启动一个webpack本地服务器便于开发\n\n"webpack-merge": "^4.2.2"\n// 能够将两个webpack配置合并\n\n"babel-loader": "^8.1.0",\n// webpack中使用 babel 需要的loader\n\n"@babel/core": "^7.9.6",\n"@babel/plugin-transform-runtime": "^7.9.6",\n"@babel/preset-env": "^7.9.6",\n"@babel/polyfill": "^7.8.7",\n"@babel/runtime": "^7.9.6",\n"@babel/runtime-corejs2": "^7.9.6",\n"core-js": "^2.6.11"\n// 能够将es6+ 转换位浏览器支持的 es5-\n\n"postcss-loader": "^3.0.0",\n"autoprefixer": "^9.7.6",\n// css样式添加浏览器前缀\n\n"clean-webpack-plugin": "^3.0.0",\n// 打包前清除上一次打包后生成的文件夹\n\n"css-loader": "^3.5.3",\n// 将css样式拼接成一个文件\n\n"file-loader": "^6.0.0",\n// 将源代码文件复制一个到打包生成后的文件夹中\n\n"url-loader": "^4.1.0",\n与 file-loader 功能一致\n能够配置依据文件打下而生成文件或打包到一起\n\n"html-webpack-plugin": "^4.3.0",\n// 生成 依据模板html生成打包后的入口html文件\n\n"node-sass": "^4.14.0",\n"sass-loader": "^8.0.2",\n// sass使用时所依赖的loader和插件\n\n"style-loader": "^1.2.1",\n// 将css添加到html文件的header中\n\n"mini-css-extract-plugin": "^0.9.0"\ncss样式代码单独抽离成文件\n\n"http-server": "^0.12.3", \n// 启动一个http服务器 \n// 在命令行 执行 http-server 文件夹名（有index.html文件）\n\n"workbox-webpack-plugin": "^5.1.3"\n// PWA webpack插件 服务器done掉后能够让用户访问已缓存的页面\n// https://webpack.js.org/guides/progressive-web-application/#we-dont-work-offline-now\n\n')])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v('webpack config code splitting set\noptimization{\n\tsplitChunks: {\n\t  chunks: "all",//同步异步都做代码分割\n\t  minSize: 30000, // 大于30kb\n\t  minRemainingSize: 0,\n\t  maxSize: 0,\n\t  minChunks: 1, // 引入次数\n\t  maxAsyncRequests: 6, // 最大异步数\n\t  maxInitialRequests: 4,// 最小同步数\n\t  automaticNameDelimiter: "~", // 文件名连接符\n\t  cacheGroups: {\n\t\tdefaultVendors: {\n\t\t  test: /[\\\\/]node_modules[\\\\/]/,// 在node_modules文件夹中\n\t\t  priority: -10,// 权重值\n\t\t},\n\t\tdefault: {\n\t\t  minChunks: 2,\n\t\t  priority: -20,\n\t\t  reuseExistingChunk: true,// 模块相互引用只打包一次\n\t\t},\n\t  },\n\t},\n}\n')])])])])}),[],!1,null,null,null);e.default=a.exports}}]);