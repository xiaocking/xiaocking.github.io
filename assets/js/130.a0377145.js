(window.webpackJsonp=window.webpackJsonp||[]).push([[130],{636:function(t,a,r){"use strict";r.r(a);var s=r(2),v=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"array"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#array"}},[t._v("#")]),t._v(" Array")]),t._v(" "),a("h2",{attrs:{id:"array-对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#array-对象"}},[t._v("#")]),t._v(" Array 对象")]),t._v(" "),a("blockquote",[a("p",[t._v("Array 对象用于在单个的变量中存储多个值。")])]),t._v(" "),a("h3",{attrs:{id:"创建-array-对象的语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建-array-对象的语法"}},[t._v("#")]),t._v(" 创建 Array 对象的语法")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("element0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" element1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" elementn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参数"}},[t._v("#")]),t._v(" 参数")]),t._v(" "),a("p",[t._v("参数 size 是期望的数组元素个数。返回的数组，length 字段将被设为 size 的值。")]),t._v(" "),a("p",[t._v("参数 element ..., elementn 是参数列表。当使用这些参数来调用构造函数 Array() 时，新创建的数组的元素就会被初始化为这些值。它的 length 字段也会被设置为参数的个数。")]),t._v(" "),a("h3",{attrs:{id:"返回值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#返回值"}},[t._v("#")]),t._v(" 返回值")]),t._v(" "),a("p",[t._v("返回新创建并被初始化了的数组。")]),t._v(" "),a("p",[t._v("如果调用构造函数 Array() 时没有使用参数，那么返回的数组为空，length 字段为 0。")]),t._v(" "),a("p",[t._v("当调用构造函数时只传递给它一个数字参数，该构造函数将返回具有指定个数、元素为 undefined 的数组。")]),t._v(" "),a("p",[t._v("当其他参数调用 Array() 时，该构造函数将用参数指定的值初始化数组。")]),t._v(" "),a("p",[t._v("当把构造函数作为函数调用，不使用 new 运算符时，它的行为与使用 new 运算符调用它时的行为完全一样。")]),t._v(" "),a("h2",{attrs:{id:"array-对象属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#array-对象属性"}},[t._v("#")]),t._v(" Array 对象属性")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("属性")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("constructor")]),t._v(" "),a("td",[t._v("返回对创建此对象的数组函数的引用。")])]),t._v(" "),a("tr",[a("td",[t._v("length")]),t._v(" "),a("td",[t._v("设置或返回数组中元素的数目。")])]),t._v(" "),a("tr",[a("td",[t._v("prototype")]),t._v(" "),a("td",[t._v("使您有能力向对象添加属性和方法。")])])])]),t._v(" "),a("h2",{attrs:{id:"array-对象方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#array-对象方法"}},[t._v("#")]),t._v(" Array 对象方法")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("方法")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("concat()")]),t._v(" "),a("td",[t._v("连接两个或更多的数组，并返回结果。")])]),t._v(" "),a("tr",[a("td",[t._v("join()")]),t._v(" "),a("td",[t._v("把数组的所有元素放入一个字符串。元素通过指定的分隔符进行分隔。")])]),t._v(" "),a("tr",[a("td",[t._v("pop()")]),t._v(" "),a("td",[t._v("删除并返回数组的最后一个元素")])]),t._v(" "),a("tr",[a("td",[t._v("push()")]),t._v(" "),a("td",[t._v("向数组的末尾添加一个或更多元素，并返回新的长度。")])]),t._v(" "),a("tr",[a("td",[t._v("reverse()")]),t._v(" "),a("td",[t._v("颠倒数组中元素的顺序。")])]),t._v(" "),a("tr",[a("td",[t._v("shift()")]),t._v(" "),a("td",[t._v("删除并返回数组的第一个元素")])]),t._v(" "),a("tr",[a("td",[t._v("slice()")]),t._v(" "),a("td",[t._v("从某个已有的数组返回选定的元素")])]),t._v(" "),a("tr",[a("td",[t._v("sort()")]),t._v(" "),a("td",[t._v("对数组的元素进行排序")])]),t._v(" "),a("tr",[a("td",[t._v("splice()")]),t._v(" "),a("td",[t._v("删除元素，并向数组添加新元素。")])]),t._v(" "),a("tr",[a("td",[t._v("toSource()")]),t._v(" "),a("td",[t._v("返回该对象的源代码。")])]),t._v(" "),a("tr",[a("td",[t._v("toString()")]),t._v(" "),a("td",[t._v("把数组转换为字符串，并返回结果。")])]),t._v(" "),a("tr",[a("td",[t._v("toLocaleString()")]),t._v(" "),a("td",[t._v("把数组转换为本地数组，并返回结果。")])]),t._v(" "),a("tr",[a("td",[t._v("unshift()")]),t._v(" "),a("td",[t._v("向数组的开头添加一个或更多元素，并返回新的长度。")])]),t._v(" "),a("tr",[a("td",[t._v("valueOf()")]),t._v(" "),a("td",[t._v("返回数组对象的原始值")])])])])])}),[],!1,null,null,null);a.default=v.exports}}]);