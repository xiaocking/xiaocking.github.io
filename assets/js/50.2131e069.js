(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{510:function(t,n,s){t.exports=s.p+"assets/img/nginx1.b4b11662.png"},678:function(t,n,s){"use strict";s.r(n);var a=s(2),e=Object(a.a)({},(function(){var t=this,n=t._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"linux-安装-nginx"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#linux-安装-nginx"}},[t._v("#")]),t._v(" Linux 安装 nginx")]),t._v(" "),n("h2",{attrs:{id:"nginx-常用命令"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nginx-常用命令"}},[t._v("#")]),t._v(" nginx 常用命令")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看Nginx进程是否启动")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-ef")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" nginx\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 打开配置文件")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("vi")]),t._v(" /usr/local/nginx/conf/nginx.conf\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 命令 适用于手动安装方式")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 进入 cd /usr/local/nginx/sbin")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 启动")]),t._v("\n./nginx\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 关闭")]),t._v("\n./nginx "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-s")]),t._v(" stop\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重启")]),t._v("\n./nginx "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-s")]),t._v(" reload\n")])])]),n("h2",{attrs:{id:"一、-yum-安装"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一、-yum-安装"}},[t._v("#")]),t._v(" 一、 Yum 安装")]),t._v(" "),n("p",[n("a",{attrs:{href:"http://nginx.org/en/linux_packages.html#RHEL-CentOS",target:"_blank",rel:"noopener noreferrer"}},[t._v("nginx 官网安装说明"),n("OutboundLink")],1)]),t._v(" "),n("h3",{attrs:{id:"一-安装"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一-安装"}},[t._v("#")]),t._v(" (一)安装")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("设置 yum 存储库")]),t._v(" "),n("blockquote",[n("p",[t._v("vim /etc/yum.repos.d/nginx.repo")])])]),t._v(" "),n("li",[n("p",[t._v("在第一步生成的文件中填入一下内容")]),t._v(" "),n("div",{staticClass:"language-yml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nname=nginx repo\nbaseurl=http"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//nginx.org/packages/centos/7/$basearch/\ngpgcheck=0\nenabled=1\n")])])])]),t._v(" "),n("li",[n("p",[t._v("安装 nginx")]),t._v(" "),n("blockquote",[n("p",[t._v("yum install nginx")])])]),t._v(" "),n("li",[n("p",[t._v("查看 nginx 安装目录")]),t._v(" "),n("blockquote",[n("p",[t._v("rpm -ql nginx")])]),t._v(" "),n("p",[n("img",{attrs:{src:s(510),alt:"nginx安装目录"}})])])]),t._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"title"}),n("p",[t._v("从上图可看出此方法安装的 nginx 文件存放较为分散。"),n("br"),t._v("\n如果想要 nginx 文件集中在一起，可使用下一种手动安装方式")])]),n("h3",{attrs:{id:"一-卸载"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一-卸载"}},[t._v("#")]),t._v(" (一)卸载")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1. 停止Nginx软件")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("service")]),t._v(" nginx stop\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 2. 删除Nginx的自动启动")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 3. 从源头删除Nginx")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-rf")]),t._v(" /usr/sbin/nginx\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-rf")]),t._v(" /etc/nginx\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-rf")]),t._v(" /etc/init.d/nginx\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 4. 再使用yum清理")]),t._v("\nyum remove nginx\n")])])]),n("h2",{attrs:{id:"手动安装"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#手动安装"}},[t._v("#")]),t._v(" 手动安装")]),t._v(" "),n("h3",{attrs:{id:"二-安装"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二-安装"}},[t._v("#")]),t._v(" (二)安装")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://nginx.org/download/",target:"_blank",rel:"noopener noreferrer"}},[t._v("nginx 下载地址 1"),n("OutboundLink")],1)]),t._v(" "),n("p",[n("a",{attrs:{href:"https://nginx.org/en/download.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("nginx 下载地址 2"),n("OutboundLink")],1)]),t._v(" "),n("ol",[n("li",[n("p",[t._v("从 nginx 官网下载安装包")]),t._v(" "),n("blockquote",[n("p",[t._v("本次下载 nginx-1.18.0.tar.gz")])])]),t._v(" "),n("li",[n("p",[t._v("安装 nginx 相关依赖")]),t._v(" "),n("blockquote",[n("p",[t._v("yum -y install gcc pcre-devel zlib-devel openssl openssl-devel")])])]),t._v(" "),n("li",[n("p",[t._v("将刚刚下载的 nginx 安装包上传到 linux 服务器中 "),n("code",[t._v("/usr/local/")]),t._v(" 下")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 未安装 lrzsz 的，先安装：yum install -y lrzsz")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" /usr/local/\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 上传 并选中 nginx 安装包")]),t._v("\nrz "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-be")]),t._v("\n")])])])]),t._v(" "),n("li",[n("p",[t._v("安装")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 解压")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-zxvf")]),t._v(" nginx-1.18.0.tar.gz\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 进入")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" nginx-1.18.0\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置")]),t._v("\n./configure "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--prefix")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/usr/local/nginx\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("\n")])])])])]),t._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"title"}),n("p",[t._v("此方法安装完成后 文件集中在"),n("code",[t._v("/usr/local/nginx")])])]),n("h3",{attrs:{id:"二-卸载"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二-卸载"}},[t._v("#")]),t._v(" (二)卸载")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1. 停止运行")]),t._v("\n/usr/local/nginx/sbin/nginx "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-s")]),t._v(" stop\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 2. 查找根下所有名字包含 nginx 的文件")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),t._v(" / "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-name")]),t._v(" nginx\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 3. 执行命令 rm -rf * 删除 nignx 安装的相关文件")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-rf")]),t._v(" /usr/local/nginx\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("."),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("第二步查找到的相关 nginx 目录"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 4. 如果设置了 Nginx 开机自启动的话，可能还需要下面两步")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("chkconfig")]),t._v(" nginx off\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-rf")]),t._v(" /etc/init.d/nginx\n")])])]),n("h2",{attrs:{id:"nginx配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nginx配置"}},[t._v("#")]),t._v(" nginx配置")]),t._v(" "),n("div",{staticClass:"language-yml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#user  nobody;")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#==工作进程数，一般设置为cpu核心数")]),t._v("\nworker_processes  1;\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#error_log  logs/error.log;")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#error_log  logs/error.log  notice;")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#error_log  logs/error.log  info;")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#pid        logs/nginx.pid;")]),t._v("\nevents "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#==最大连接数，一般设置为cpu*2048")]),t._v("\n    worker_connections  1024;\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\nhttp "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tinclude       mime.types;\n\tdefault_type  application/octet"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("stream;\n\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#                  '$status $body_bytes_sent \"$http_referer\" '")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#                  \'"$http_user_agent" "$http_x_forwarded_for"\';')]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#access_log  logs/access.log  main;")]),t._v("\n\n\tsendfile        on;\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#tcp_nopush     on;")]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#keepalive_timeout  0;")]),t._v("\n\t\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#==客户端链接超时时间")]),t._v("\n\tkeepalive_timeout  65;\n\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#gzip  on;")]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#当配置多个server节点时，默认server names的缓存区大小就不够了，需要手动设置大一点")]),t._v("\n\tserver_names_hash_bucket_size 512;\n\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#server表示虚拟主机可以理解为一个站点，可以配置多个server节点搭建多个站点")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#每一个请求进来确定使用哪个server由server_name确定")]),t._v("\n\tserver "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#站点监听端口")]),t._v("\n\t\tlisten       8800;\n\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#站点访问域名")]),t._v("\n\t\tserver_name  localhost;\n\t\t\n\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#编码格式，避免url参数乱码")]),t._v("\n\t\tcharset utf"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("8;\n\n\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#access_log  logs/host.access.log  main;")]),t._v("\n\n\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#location用来匹配同一域名下多个URI的访问规则")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#比如动态资源如何跳转，静态资源如何跳转等")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#location后面跟着的/代表匹配规则")]),t._v("\n\t\tlocation / "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#站点根目录，可以是相对路径，也可以使绝对路径")]),t._v("\n\t\t\troot   html;\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#默认主页")]),t._v("\n\t\t\tindex  index.html index.htm;\n\t\t\t\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#转发后端站点地址，一般用于做软负载，轮询后端服务器")]),t._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#proxy_pass http://10.11.12.237:8080;")]),t._v("\n\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#拒绝请求，返回403，一般用于某些目录禁止访问")]),t._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#deny all;")]),t._v("\n\t\t\t\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#允许请求")]),t._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#allow all;")]),t._v("\n\t\t\t\t\n\t\t\tadd_header 'Access"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("Control"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("Allow"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("Origin' '"),n("span",{pre:!0,attrs:{class:"token important"}},[t._v("*';")]),t._v("\n\t\t\tadd_header 'Access"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("Control"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("Allow"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("Credentials' 'true';\n\t\t\tadd_header 'Access"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("Control"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("Allow"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("Methods' 'GET"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" POST"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" OPTIONS';\n\t\t\tadd_header 'Access"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("Control"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("Allow"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("Headers' 'DNT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("X"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("CustomHeader"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Keep"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("Alive"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("User"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("Agent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("X"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("Requested"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("With"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("If"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("Modified"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("Since"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Cache"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("Control"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Content"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("Type';\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重新定义或者添加发往后端服务器的请求头")]),t._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 给请求头中添加客户请求主机名")]),t._v("\n\t\t\tproxy_set_header Host $host;\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 给请求头中添加客户端IP")]),t._v("\n\t\t\tproxy_set_header X"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("Real"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("IP $remote_addr;\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#将$remote_addr变量值添加在客户端“X-Forwarded-For”请求头的后面，并以逗号分隔。 如果客户端请求未携带“X-Forwarded-For”请求头，$proxy_add_x_forwarded_for变量值将与$remote_addr变量相同  ")]),t._v("\n\t\t\tproxy_set_header X"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("Forwarded"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("For $proxy_add_x_forwarded_for;\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#给请求头中添加客户端的Cookie")]),t._v("\n\t\t\tproxy_set_header Cookie $http_cookie;\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#将使用代理服务器的主域名和端口号来替换。如果端口是80，可以不加。")]),t._v("\n\t\t\tproxy_redirect off;\n\t\t\t\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#浏览器对 Cookie 有很多限制，如果 Cookie 的 Domain 部分与当前页面的 Domain 不匹配就无法写入。")]),t._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#所以如果请求 A 域名，服务器 proxy_pass 到 B 域名，然后 B 服务器输出 Domian=B 的 Cookie，")]),t._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#前端的页面依然停留在 A 域名上，于是浏览器就无法将 Cookie 写入。")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#不仅是域名，浏览器对 Path 也有限制。我们经常会 proxy_pass 到目标服务器的某个 Path 下，")]),t._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#不把这个 Path 暴露给浏览器。这时候如果目标服务器的 Cookie 写死了 Path 也会出现 Cookie 无法写入的问题。")]),t._v("\n\t\t\t\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设置“Set-Cookie”响应头中的domain属性的替换文本，其值可以为一个字符串、正则表达式的模式或一个引用的变量")]),t._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#转发后端服务器如果需要Cookie则需要将cookie domain也进行转换，否则前端域名与后端域名不一致cookie就会无法存取")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#配置规则：proxy_cookie_domain serverDomain(后端服务器域) nginxDomain(nginx服务器域)")]),t._v("\n\t\t\tproxy_cookie_domain localhost .testcaigou800.com;\n\t\t\t\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#取消当前配置级别的所有proxy_cookie_domain指令")]),t._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#proxy_cookie_domain off;")]),t._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#与后端服务器建立连接的超时时间。一般不可能大于75秒；")]),t._v("\n\t\t\tproxy_connect_timeout 30;\n\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#error_page  404              /404.html;")]),t._v("\n\n\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# redirect server error pages to the static page /50x.html")]),t._v("\n\t\terror_page   500 502 503 504  /50x.html;\n\t\tlocation = /50x.html "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\troot   html;\n\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#当需要对同一端口监听多个域名时，使用如下配置，端口相同域名不同，server_name也可以使用正则进行配置")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#但要注意server过多需要手动扩大server_names_hash_bucket_size缓存区大小")]),t._v("\n\tserver "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tlisten 80;\n\t\tserver_name www.abc.com;\n\t\tcharset utf"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("8;\n\t\tlocation / "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tproxy_pass http"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//localhost"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("10001;\n\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\tserver "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tlisten 80;\n\t\tserver_name aaa.abc.com;\n\t\tcharset utf"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("8;\n\t\tlocation / "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tproxy_pass http"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//localhost"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("20002;\n\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\tserver "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tlisten 80;\n\t\tserver_name aaa.abc.com;\n\t\tcharset utf"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("8;\n\t\tlocation / "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      root   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 打包文件的路径，例/Users/x/Desktop/workspace/general/dist/test;")]),t._v("\n      index  index.html index.htm;\n      try_files $uri $uri/ /index.html; "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 解决 vue 路由 history 模式下404")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h2",{attrs:{id:"注意事项"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#注意事项"}},[t._v("#")]),t._v(" 注意事项")]),t._v(" "),n("h3",{attrs:{id:"_1-如未开放-80-端口-需开放"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-如未开放-80-端口-需开放"}},[t._v("#")]),t._v(" 1. 如未开放 80 端口，需开放")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看已开放的端口：")]),t._v("\nfirewall-cmd --list-ports\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 默认80端口加入防火墙访问白名单中：")]),t._v("\nfirewall-cmd "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--permanent")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--zone")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("public --add-port"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("/tcp\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用命令使其生效：")]),t._v("\nfirewall-cmd "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--reload")]),t._v("\n")])])])])}),[],!1,null,null,null);n.default=e.exports}}]);