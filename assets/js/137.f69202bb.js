(window.webpackJsonp=window.webpackJsonp||[]).push([[137],{643:function(t,v,_){"use strict";_.r(v);var r=_(2),a=Object(r.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"string"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#string"}},[t._v("#")]),t._v(" String")]),t._v(" "),v("h2",{attrs:{id:"string-对象"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#string-对象"}},[t._v("#")]),t._v(" String 对象")]),t._v(" "),v("blockquote",[v("p",[t._v("String 对象用于处理文本（字符串）。")])]),t._v(" "),v("h3",{attrs:{id:"创建-string-对象的语法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#创建-string-对象的语法"}},[t._v("#")]),t._v(" 创建 String 对象的语法")]),t._v(" "),v("div",{staticClass:"language-js extra-class"},[v("pre",{pre:!0,attrs:{class:"language-js"}},[v("code",[v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),v("h3",{attrs:{id:"参数"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#参数"}},[t._v("#")]),t._v(" 参数")]),t._v(" "),v("p",[t._v("参数 s 是要存储在 String 对象中或转换成原始字符串的值。")]),t._v(" "),v("h3",{attrs:{id:"返回值"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#返回值"}},[t._v("#")]),t._v(" 返回值")]),t._v(" "),v("p",[t._v("当 String() 和运算符 new 一起作为构造函数使用时，它返回一个新创建的 String 对象，存放的是字符串 s 或 s 的字符串表示。")]),t._v(" "),v("p",[t._v("当不用 new 运算符调用 String() 时，它只把 s 转换成原始的字符串，并返回转换后的值。")]),t._v(" "),v("h2",{attrs:{id:"string-对象描述"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#string-对象描述"}},[t._v("#")]),t._v(" String 对象描述")]),t._v(" "),v("p",[t._v("字符串是 JavaScript 的一种基本的数据类型。")]),t._v(" "),v("p",[t._v("String 对象的 length 属性声明了该字符串中的字符数。")]),t._v(" "),v("p",[t._v("String 类定义了大量操作字符串的方法，例如从字符串中提取字符或子串，或者检索字符或子串。")]),t._v(" "),v("p",[t._v("需要注意的是，JavaScript 的字符串是不可变的（immutable），String 类定义的方法都不能改变字符串的内容。像 String.toUpperCase() 这样的方法，返回的是全新的字符串，而不是修改原始字符串。")]),t._v(" "),v("p",[t._v("在较早的 Netscape 代码基的 JavaScript 实现中（例如 Firefox 实现中），字符串的行为就像只读的字符数组。例如，从字符串 s 中提取第三个字符，可以用 s[2] 代替更加标准的 s.charAt(2)。此外，对字符串应用 for/in 循环时，它将枚举字符串中每个字符的数组下标（但要注意，ECMAScript 标准规定，不能枚举 length 属性）。因为字符串的数组行为不标准，所以应该避免使用它。")]),t._v(" "),v("h2",{attrs:{id:"string-对象属性"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#string-对象属性"}},[t._v("#")]),t._v(" String 对象属性")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("属性")]),t._v(" "),v("th",[t._v("描述")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("constructor")]),t._v(" "),v("td",[t._v("返回对创建此对象的数组函数的引用。")])]),t._v(" "),v("tr",[v("td",[t._v("prototype")]),t._v(" "),v("td",[t._v("使您有能力向对象添加属性和方法。")])]),t._v(" "),v("tr",[v("td",[t._v("length")]),t._v(" "),v("td",[t._v("字符串的长度")])])])]),t._v(" "),v("h2",{attrs:{id:"string-对象方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#string-对象方法"}},[t._v("#")]),t._v(" String 对象方法")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("方法")]),t._v(" "),v("th",[t._v("描述")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("anchor()")]),t._v(" "),v("td",[t._v("创建 HTML 锚。")])]),t._v(" "),v("tr",[v("td",[t._v("big()")]),t._v(" "),v("td",[t._v("用大号字体显示字符串。")])]),t._v(" "),v("tr",[v("td",[t._v("blink()")]),t._v(" "),v("td",[t._v("显示闪动字符串。")])]),t._v(" "),v("tr",[v("td",[t._v("bold()")]),t._v(" "),v("td",[t._v("使用粗体显示字符串。")])]),t._v(" "),v("tr",[v("td",[t._v("charAt()")]),t._v(" "),v("td",[t._v("返回在指定位置的字符。")])]),t._v(" "),v("tr",[v("td",[t._v("charCodeAt()")]),t._v(" "),v("td",[t._v("返回在指定的位置的字符的 Unicode 编码。")])]),t._v(" "),v("tr",[v("td",[t._v("concat()")]),t._v(" "),v("td",[t._v("连接字符串。")])]),t._v(" "),v("tr",[v("td",[t._v("fixed()")]),t._v(" "),v("td",[t._v("以打字机文本显示字符串。")])]),t._v(" "),v("tr",[v("td",[t._v("fontcolor()")]),t._v(" "),v("td",[t._v("使用指定的颜色来显示字符串。")])]),t._v(" "),v("tr",[v("td",[t._v("fontsize()")]),t._v(" "),v("td",[t._v("使用指定的尺寸来显示字符串。")])]),t._v(" "),v("tr",[v("td",[t._v("fromCharCode()")]),t._v(" "),v("td",[t._v("从字符编码创建一个字符串。")])]),t._v(" "),v("tr",[v("td",[t._v("indexOf()")]),t._v(" "),v("td",[t._v("检索字符串。")])]),t._v(" "),v("tr",[v("td",[t._v("italics()")]),t._v(" "),v("td",[t._v("使用斜体显示字符串。")])]),t._v(" "),v("tr",[v("td",[t._v("lastIndexOf()")]),t._v(" "),v("td",[t._v("从后向前搜索字符串。")])]),t._v(" "),v("tr",[v("td",[t._v("link()")]),t._v(" "),v("td",[t._v("将字符串显示为链接。")])]),t._v(" "),v("tr",[v("td",[t._v("localeCompare()")]),t._v(" "),v("td",[t._v("用本地特定的顺序来比较两个字符串。")])]),t._v(" "),v("tr",[v("td",[t._v("match()")]),t._v(" "),v("td",[t._v("找到一个或多个正则表达式的匹配。")])]),t._v(" "),v("tr",[v("td",[t._v("replace()")]),t._v(" "),v("td",[t._v("替换与正则表达式匹配的子串。")])]),t._v(" "),v("tr",[v("td",[t._v("search()")]),t._v(" "),v("td",[t._v("检索与正则表达式相匹配的值。")])]),t._v(" "),v("tr",[v("td",[t._v("slice()")]),t._v(" "),v("td",[t._v("提取字符串的片断，并在新的字符串中返回被提取的部分。")])]),t._v(" "),v("tr",[v("td",[t._v("small()")]),t._v(" "),v("td",[t._v("使用小字号来显示字符串。")])]),t._v(" "),v("tr",[v("td",[t._v("split()")]),t._v(" "),v("td",[t._v("把字符串分割为字符串数组。")])]),t._v(" "),v("tr",[v("td",[t._v("strike()")]),t._v(" "),v("td",[t._v("使用删除线来显示字符串。")])]),t._v(" "),v("tr",[v("td",[t._v("sub()")]),t._v(" "),v("td",[t._v("把字符串显示为下标。")])]),t._v(" "),v("tr",[v("td",[t._v("substr()")]),t._v(" "),v("td",[t._v("从起始索引号提取字符串中指定数目的字符。")])]),t._v(" "),v("tr",[v("td",[t._v("substring()")]),t._v(" "),v("td",[t._v("提取字符串中两个指定的索引号之间的字符。")])]),t._v(" "),v("tr",[v("td",[t._v("sup()")]),t._v(" "),v("td",[t._v("把字符串显示为上标。")])]),t._v(" "),v("tr",[v("td",[t._v("toLocaleLowerCase()")]),t._v(" "),v("td",[t._v("把字符串转换为小写。")])]),t._v(" "),v("tr",[v("td",[t._v("toLocaleUpperCase()")]),t._v(" "),v("td",[t._v("把字符串转换为大写。")])]),t._v(" "),v("tr",[v("td",[t._v("toLowerCase()")]),t._v(" "),v("td",[t._v("把字符串转换为小写。")])]),t._v(" "),v("tr",[v("td",[t._v("toUpperCase()")]),t._v(" "),v("td",[t._v("把字符串转换为大写。")])]),t._v(" "),v("tr",[v("td",[t._v("toSource()")]),t._v(" "),v("td",[t._v("代表对象的源代码。")])]),t._v(" "),v("tr",[v("td",[t._v("toString()")]),t._v(" "),v("td",[t._v("返回字符串。")])]),t._v(" "),v("tr",[v("td",[t._v("valueOf()")]),t._v(" "),v("td",[t._v("返回某个字符串对象的原始值。")])])])])])}),[],!1,null,null,null);v.default=a.exports}}]);